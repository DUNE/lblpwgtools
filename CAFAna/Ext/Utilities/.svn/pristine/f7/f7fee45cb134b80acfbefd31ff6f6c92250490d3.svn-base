#include "services.fcl"
#include "BackTracker.fcl"
#include "Metadata.fcl"

# numue/remid (includes RecoMuonConfig.fcl itself)
#include "NumuEnergy.fcl"

# qepid
#include "QeFinder.fcl"

# cosrej
#include "CosRej.fcl"

# eid
#include "RecoJMShower.fcl"
#include "NueSel.fcl"

# rvp
#include "RecVarPID.fcl"

# slid
#include "Recluster.fcl"
#include "LIDBuilder.fcl"

# lem
#include "LEMSummarizer.fcl"

# nue preselection
#include "NuePresel.fcl"

process_name: BatchPID

services:
{
  TFileService: { fileName: "pidproduction_hist.root" closeFileFast: false }
  scheduler:    { wantTracer: true wantSummary: true }
  message:      { debugModules: ["*"] destinations: { debugmsg:{type: "cout" threshold: "WARNING"} } }
  @table::standard_services
}
services.BackTracker: @local::standard_backtracker

source:
{
  module_type: RootInput
  maxEvents:   -1
}

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "pidproduction.root"
    fastCloning: false
  }
    
  out2:
  {
    module_type: RootOutput
    fileName:    "summarized.root"
    outputCommands: [ "drop *",
                      "keep lem::LEMInputs_*_*_*",
                      "keep sumdata::*_*_*_*" 
                    ]
  }
}

physics:
{
  producers:
  {
    #responsibility indicated in comments after each module
    remid:              @local::standard_recomuon            #numu
    cosrej:             @local::standard_cosrej              #numu
    numue:              @local::standard_numue               #numu
    qepid:              @local::standard_qefinder            #numu
    
    nuepresel:          @local::nue_prodpresel
    recojmshower:       @local::standard_recojmshower        #nue
    eid:                @local::standard_nuesel              #nue
    recluster:          @local::standard_recluster           #nue
    slid:               @local::standard_lidbuilder          #nue  
    rvp:                @local::standard_rvp                 #nue
    summarize:          @local::standard_lemsummarizer       #nue
  }

  analyzers:
  {
    metadata:           @local::standard_metadata
  }
    
  reco:          [ remid, cosrej, numue, qepid,
                   nuepresel,
                   recojmshower, eid, recluster, slid, rvp, summarize ]

  stream1:       [ out1, out2, metadata ]
  trigger_paths: [ reco, lemsum ]
  end_paths:     [ stream1 ]
}

physics.analyzers.metadata.params.pidpart.base_release: ""       #automatically picked up at run time
physics.analyzers.metadata.params.NOVA.Standard: "true"

physics.producers.recojmshower.ZEdgeId2:  255
services.LiveGeometry.UserDefined: true
services.LiveGeometry.XZLiveDiblocks: [1,1,1,1,0,0,0,0,0,0,0,0,0,0]
services.LiveGeometry.YZLiveDiblocks: [1,1,1,1,0,0,0,0,0,0,0,0,0,0]
