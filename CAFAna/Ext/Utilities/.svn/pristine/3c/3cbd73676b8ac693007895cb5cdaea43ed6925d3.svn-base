#include "services.fcl"

#include "FillNueSandbox.fcl"
#include "FillSandbox.fcl"
#include "CAFMaker.fcl"

#include "BackTracker.fcl"
#include "Metadata.fcl"

process_name: CAFMaker

services:
{
  scheduler:    { wantTracer : false wantSummary : false }
  TimeTracker: {}
  RandomNumberGenerator: {} #ART native random number generator
  @table::standard_services
}
services.BackTracker: @local::standard_backtracker

source:
{
  module_type: RootInput
  maxEvents:   -1
}

physics:
{
  producers:
  {
    nuesand:  @local::standard_nuesand 
    numusand: @local::standard_numusand
    cafmaker: @local::standard_cafmaker
  }
  analyzers:
  {
    metadata: @local::standard_metadata            #prod
  }

  makecaf:  [ nuesand, numusand, cafmaker ]

  stream1:       [ metadata ]
  trigger_paths: [ makecaf ]
  end_paths:     [ stream1 ]
  

}

physics.analyzers.metadata.params.caf.base_release: "" #automatically picked up at run time
physics.analyzers.metadata.params.NOVA.Standard: "true"


