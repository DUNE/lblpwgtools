

#include "services.fcl"

#include "FillNueSandbox.fcl"
#include "FillSandbox.fcl"
#include "CAFMaker.fcl"

#include "BackTracker.fcl"
#include "Metadata.fcl"


process_name: MrccCAFMaker

services:
{
    scheduler:    { wantTracer : false wantSummary : false }
    TimeTracker: {}
    RandomNumberGenerator: {} #ART native random number generator
    @table::standard_services
}
services.BackTracker: @local::standard_backtracker

source:
{
    module_type: RootInput
    maxEvents:   -1
}

physics:
{
  producers:
    {
        nuesandmrcc:  @local::mrcc_nuesand 
        numusandmrcc: @local::mrcc_numusand
        cafmakermrcc: @local::mrcc_cafmaker
    }
  analyzers:
    {
        metadata: @local::standard_metadata            #prod
    }

    makecaf:  [ nuesandmrcc, numusandmrcc, cafmakermrcc ]

    stream1:       [ metadata ]
    trigger_paths: [ makecaf ]
    end_paths:     [ stream1 ]
    

}

physics.analyzers.metadata.params.mrcccaf.base_release: "" #automatically picked up at run time
physics.analyzers.metadata.params.NOVA.Standard: "true"
