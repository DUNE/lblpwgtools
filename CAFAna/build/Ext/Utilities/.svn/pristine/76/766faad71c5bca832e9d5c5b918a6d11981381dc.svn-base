#include "services.fcl"

#include "CalHit.fcl"
#include "Slicer4D.fcl"

#include "CosmicExposureInfo.fcl"
#include "IFDBSpillInfo.fcl"

#include "CosmicTrack.fcl"

#include "KalmanTrack.fcl"
#include "KalmanTrackMerge.fcl"

#include "MultiHoughT.fcl"
#include "ElasticArmsHS.fcl"
#include "FuzzyKVertex.fcl"

#include "MichelEFilter.fcl"
#include "SliceMEF.fcl"

#include "BackTracker.fcl"

#include "Metadata.fcl"

process_name: BatchReco

services:
{
  TFileService: { fileName: "recoproduction_hist.root" closeFileFast: false}
  scheduler:    { wantTracer: true wantSummary: true }
  message:      { debugModules: ["*"] destinations: { debugmsg:{type: "cout" threshold: "WARNING"} } }
  @table::standard_services
}
services.BackTracker: @local::standard_backtracker
services.IFBeam: {}

source:
{
  module_type: RootInput
  maxEvents:   -1
}

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "recoproduction.root"
    fastCloning: false
  }
}

physics:
{
  producers:
  {
    #responsibility indicated in comments after each module
    exposure:             @local::standard_cosmicexposureinfo  #calib
    ifdbspillinfo:        @local::standard_ifdbspillinfo       #beam
    calhit:               @local::standard_calhit              #calib
    slicer:               @local::standard_slicer4d            #reco
    cosmictrack:          @local::standard_cosmictrack         #reco
    kalmantrack:          @local::standard_kalmantrack         #reco
    kalmantrackmerge:     @local::standard_kalmantrackmerge    #reco
    multihough:           @local::standard_multihough          #reco
    elasticarmshs:        @local::standard_elasticarmshs       #reco
    fuzzykvertex:         @local::standard_fuzzykvertex        #reco
    slicemef:             @local::standard_slicemef            #reco
  }

  analyzers:
  {
    metadata:             @local::standard_metadata            #prod
  }

  filters:
  {
    michelecosmictrack:   @local::passall_michelecosmic        #calib
    michelekalmantrack:   @local::passall_michelekalman        #calib
  }
    
  reco: [ exposure, ifdbspillinfo, calhit, slicer, cosmictrack, kalmantrack,
          kalmantrackmerge, multihough, elasticarmshs, fuzzykvertex,
          michelecosmictrack, michelekalmantrack, slicemef ]
    
  stream1:       [ out1, metadata ]
  trigger_paths: [ reco ]
  end_paths:     [ stream1 ]
}

physics.analyzers.metadata.params.Reconstructed.base_release: "" #automatically picked up at run time
physics.analyzers.metadata.params.NOVA.Standard: "true"
