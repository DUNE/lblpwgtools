#include "LEMMixer.fcl"
#include "LEMAssociator.fcl"
#include "Metadata.fcl"

#include "FillNueSandbox.fcl"
#include "FillSandbox.fcl"
#include "CAFMaker.fcl"

#include "BackTracker.fcl"


#include "services.fcl"

process_name: LEMMixer

services:
{
  @table::standard_services
}

source:
{
  module_type: RootInput
}
services.BackTracker: @local::standard_backtracker

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "lemmixed.root"
    fastCloning: false
    outputCommands: [ "keep * ",
                      "drop *_nuesand_*_LEMMixer",
                      "drop *_numusand_*_LEMMixer"
                    ]
  }
}

physics:
{
  filters:{
    lemmix: @local::mrcc_lemmixer
  }
  producers:{
  
    lem: @local::mrcc_lemassociator
    nuesand:  @local::mrcc_nuesand
    numusand: @local::mrcc_numusand
    cafmaker: @local::prod_cafmaker

  }
  
  analyzers:{
    metadata: @local::mrcc_metadata
  }

  p1: [ lemmix, lem, nuesand, numusand, cafmaker]
  stream1:  [ metadata, out1 ]

  trigger_paths: [ p1 ]
  end_paths:     [stream1]
}


services.Calibrator.UseValidityDB: true

physics.analyzers.metadata.params.mrcccaf.base_release: "" #automatically picked up at run time
physics.analyzers.metadata.params.mrccpid.base_release: "" #automatically picked up at run time
physics.analyzers.metadata.params.NOVA.Standard: "true"



